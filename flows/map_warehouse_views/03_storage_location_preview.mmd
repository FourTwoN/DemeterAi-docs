---
title: Storage Location Preview Card - Component Structure
---
graph TB
%% Data Input
    PreviewData["📦 Preview Data<br/>From bulk-load cache<br/>- quantity metrics<br/>- financial data<br/>- category counts<br/>- status info"]
%% Card Rendering
    subgraph CardStructure["🃏 Card Structure"]
        CardContainer["📦 Card Container<br/>- Rounded corners<br/>- Shadow on hover<br/>- Cursor pointer"]
        ImageSection["🖼️ Image Section<br/>- 300x300 thumbnail<br/>- Lazy loading<br/>- Overlay badges"]
        ContentSection["📄 Content Section<br/>- Title & code<br/>- Metrics grid<br/>- Category breakdown<br/>- Footer"]
    end

    PreviewData --> CardContainer
    CardContainer --> ImageSection
    CardContainer --> ContentSection
%% Image Details
    subgraph ImageDetails["🖼️ Image Section Details"]
        Thumbnail["📸 Thumbnail Image<br/>S3 presigned URL<br/>loading='lazy'"]
        CodeBadge["🏷️ Code Badge<br/>Top-left<br/>Primary color"]
    %%        StatusBadge["✅ Status Badge<br/>Top-right<br/>Green/Yellow/Red"]
        CanteroBadge["📍 Cantero Badge<br/>Bottom-left<br/>Position name"]
        ImageSection --> Thumbnail
        ImageSection --> CodeBadge
    %%        ImageSection --> StatusBadge
        ImageSection --> CanteroBadge
    end

%% Content Details
    subgraph ContentDetails["📄 Content Section Details"]
        Title["📝 Title<br/>Storage location name<br/>Truncated if long"]
        MetricsGrid["📊 Metrics Grid (2x2)<br/>- Quantity<br/>- Maceta<br/>- Current Value<br/>- Potential Value"]
        CategoryTags["🏷️ Category Tags<br/>- Cactus: X<br/>- Suculenta: Y<br/>- Injerto: Z"]
        QualityBar["⭐ Quality Score<br/>Progress bar<br/>Color-coded (0-100)"]
        Footer["📅 Footer<br/>Last updated date<br/>Error message (if any)"]
    end

    ContentSection --> Title
    ContentSection --> MetricsGrid
    ContentSection --> CategoryTags
    ContentSection --> QualityBar
    ContentSection --> Footer
%% Metrics Details
    subgraph MetricsDetails["📊 Metrics Calculation"]
        QuantityMetric["🔢 Quantity<br/>- current_quantity<br/>- Trend icon (↑↓→)<br/>- Change (+/-)<br/>- Percentage"]
        MacetaMetric["🪴 Maceta<br/>- Primary type<br/>- Type count"]
        ValueMetric["💰 Current Value<br/>quantity × cost_per_unit<br/>Formatted currency"]
        PotentialMetric["💎 Potential Value<br/>current_value × 1.3<br/>+30% ROI shown"]
    end

    MetricsGrid --> QuantityMetric
    MetricsGrid --> MacetaMetric
    MetricsGrid --> ValueMetric
    MetricsGrid --> PotentialMetric
%% Trend Calculation
    subgraph TrendLogic["📈 Trend Indicator Logic"]
        CalcChange["🧮 Calculate Change<br/>current - previous"]
        PositiveChange{"Change > 0?"}
        NegativeChange{"Change < 0?"}
        ArrowUp["↑ Arrow Up<br/>Green color"]
        ArrowDown["↓ Arrow Down<br/>Red color"]
        ArrowFlat["→ Minus<br/>Gray color"]
        CalcChange --> PositiveChange
        PositiveChange -->|" Yes "| ArrowUp
        PositiveChange -->|" No "| NegativeChange
        NegativeChange -->|" Yes "| ArrowDown
        NegativeChange -->|" No "| ArrowFlat
    end

    QuantityMetric -.-> TrendLogic
%%    %% Status Badge Logic
%%    subgraph StatusLogic["✅ Status Badge Logic"]
%%        CheckError{"error_message<br/>exists?"}
%%        CheckStatus{"status ==<br/>'completed'?"}
%%
%%        ErrorBadge["🔴 Error Badge<br/>Red with icon"]
%%        SuccessBadge["🟢 Success Badge<br/>Green 'OK'"]
%%        ProcessingBadge["🟡 Processing Badge<br/>Yellow 'Processing'"]
%%        PendingBadge["⚪ Pending Badge<br/>Gray 'Pending'"]
%%
%%        CheckError -->|"Yes"| ErrorBadge
%%        CheckError -->|"No"| CheckStatus
%%        CheckStatus -->|"Yes"| SuccessBadge
%%        CheckStatus -->|"No"| ProcessingBadge
%%    end

%%    StatusBadge -.-> StatusLogic

%% Quality Score Logic
    subgraph QualityLogic["⭐ Quality Score Color"]
        CheckHigh{"score >= 80?"}
        CheckMedium{"score >= 60?"}
        GreenBar["🟢 Green Bar<br/>Excellent (80-100)"]
        YellowBar["🟡 Yellow Bar<br/>Good (60-79)"]
        RedBar["🔴 Red Bar<br/>Needs Attention (<60)"]
        CheckHigh -->|" Yes "| GreenBar
        CheckHigh -->|" No "| CheckMedium
        CheckMedium -->|" Yes "| YellowBar
        CheckMedium -->|" No "| RedBar
    end

    QualityBar -.-> QualityLogic
%% User Interaction
    subgraph UserInteraction["💬 User Interactions"]
        HoverCard["🖱️ Hover Card<br/>- Increase shadow<br/>- Blue border<br/>- Lift animation"]
        ClickCard["🖱️ Click Card<br/>Navigate to Detail View<br/>(Level 3)"]
        KeyboardNav["⌨️ Keyboard<br/>- Tab: Focus<br/>- Enter/Space: Click"]
    end

    CardContainer --> HoverCard
    CardContainer --> ClickCard
    CardContainer --> KeyboardNav
    ClickCard --> DetailView["📸 Storage Location Detail<br/>(Level 3 - API call)"]
%% Performance
    subgraph Performance["⚡ Performance Optimizations"]
        LazyLoad["🖼️ Lazy Image Loading<br/>Load as scrolled into view"]
        Memoization["🧠 React.memo<br/>Prevent re-renders<br/>if data unchanged"]
        Virtualization["📜 Virtualization<br/>react-window<br/>for 500+ cards"]
    end

%% Styling
    classDef dataClass fill: #9C27B0, stroke: #6A1B9A, color: #fff
    classDef cardClass fill: #2196F3, stroke: #1565C0, color: #fff
    classDef contentClass fill: #FF9800, stroke: #E65100, color: #fff
    classDef metricsClass fill: #4CAF50, stroke: #2E7D32, color: #fff
    classDef logicClass fill: #F44336, stroke: #C62828, color: #fff
    classDef interactionClass fill: #00BCD4, stroke: #00838F, color: #fff
    classDef perfClass fill: #8BC34A, stroke: #558B2F, color: #fff
    class PreviewData dataClass
class CardContainer, ImageSection, ContentSection cardClass
class Title, MetricsGrid,CategoryTags, QualityBar, Footer contentClass
class QuantityMetric, MacetaMetric,ValueMetric, PotentialMetric metricsClass
class CheckError, CheckStatus,CheckHigh, CheckMedium logicClass
class HoverCard, ClickCard,KeyboardNav interactionClass
class LazyLoad, Memoization,Virtualization perfClass
